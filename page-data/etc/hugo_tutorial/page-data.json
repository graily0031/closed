{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/etc/hugo_tutorial/",
    "result": {"data":{"site":{"siteMetadata":{"title":"일기장"}},"markdownRemark":{"id":"6fcda7be-0c4e-5d02-90b1-89f8329ffc79","excerpt":"(해당 포스트는 2021년 08월 1…","html":"<p>(해당 포스트는 2021년 08월 16일에 작성했습니다.)<br>\n가방끈이 짧은 비전공자인 필자는 올해 초 이직을 성공했다.<br>\n실무가 아닌 자잘한 업무를 진행함에도 불구하고 종종 난관에 부딪히곤 했다.<br>\n구글링을 하다보면 당장은 문제를 해결 할 수 있지만, 다른 작업을 하다보면 금방 잊어먹게 되고 필요할 때 다시 찾아봐야 하는 악순환이 반복되었는데, 그런 고생을 덜어주기 위해 처음엔 Notion을 통해 링크 리스트를 만들어 필요시 다시 찾아보는 방법을 선택했었다.<br>\n하지만 이 방법도 예전에 비해 조금 나아졌을 뿐 실력을 늘리는데 도움이 되지 못했다. 단순히 찾아보고 끝내지 말고 당일 저녁에라도 공부해보자며 이것저것 정보를 찾아보다 개발 블로그의 필요성을 느끼게 되었고 공부하는 과정과 결과물을 기록하고자 블로그를 제작하게 되었다.</p>\n<h2>Blog 만들기</h2>\n<p>※ 필자는 현재 Windows 사용 중이다.</p>\n<h3>Hugo 설치</h3>\n<p>일단 Hugo를 다운받고 설치해야 하는데,필자의 경우 압축파일 안에 있는 파일들을 C drive에 Hugo\\bin 디렉토리를 생성한 후 bin폴더 안에 넣어주었다.<br>\n2개의 Repository 생성<br>\nGithub action을 이용하면 하나의 Repository로도 사용할 수 있다고 한다. 하지만 그렇게 만들기 어려울 것 같아서 필자는 총 두개의 Repository를 만들었다.</p>\n<ul>\n<li>컨텐츠 및 소스 보관용 Repository 1 (blog 로 지었다.)</li>\n<li>실제로 구동 될 Repository 2 (아이디(혹은 팀 이름).github.io) 필자는 Repository 1의 경우 visibility를 ‘private’로 설정한 뒤 생성하였다. 이럴경우 나중에 푸시할 때 id &#x26; password 혹은 SSH key를 요구한다. (현재 개인용 컴퓨터로만 작성하기 때문에 SSH Key를 이용하는 중)</li>\n</ul>\n<h3>hugo 새로운 사이트 생성</h3>\n<p>CMD나 PowreShell 혹은 git bash를 실행하고 Hugo를 설치한 디렉토리로 이동한 뒤\r\n(필자는 C:\\Hugo\\bin에 위치) hugo new site &#x3C;사이트명(임의지정가능)>을 입력하여 사이트를 생성했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/* <span class=\"token function\">git</span> bash로 실행했을 때 */\r\n$ <span class=\"token builtin class-name\">cd</span> c:\r\n$ <span class=\"token builtin class-name\">cd</span> Hugo/bin\r\n$ hugo new site blog</code></pre></div>\n<p>Hugo 테마에 가면 여러가지 테마들이 있다. 본인은 lubang님의 Hello Programmer를 fork 하여 로고 이미지 등을 수정한 뒤 사용하고 있다. 테마는 생성한 폴더, 즉 C:\\Hugo\\bin\\blog\\themes 폴더에 clone 후 테마 설명서에 따라 blog 최상위에 있는 config.toml 파일을 수정했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/* 현재 디렉토리가 Hugo/bin에 위치해있다면 blog로 이동 */\r\n$ <span class=\"token builtin class-name\">cd</span> blog\r\n/* <span class=\"token number\">1</span>번 선택지 <span class=\"token builtin class-name\">:</span> clone으로  <span class=\"token function\">git</span> Repository 받아올 경우 */\r\n$ <span class=\"token function\">git</span> clone https://github.com/아이디/테마.git themes/테마이름\r\n/* <span class=\"token number\">2</span>번 선택지 <span class=\"token builtin class-name\">:</span> submodule로 <span class=\"token function\">git</span> Repository 받아올 경우 */\r\n$ <span class=\"token function\">git</span> submodule <span class=\"token function\">add</span> https://github.com/아이디/테마.git themes/테마이름</code></pre></div>\n<h3>blog Remote, Submodule 설정 및 Github 연동</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/* 현재 디렉토리 -<span class=\"token operator\">>></span> C:/Hugo/bin/blog */\r\n \r\n/* <span class=\"token function\">git</span> 생성 */\r\n$ <span class=\"token function\">git</span> init\r\n \r\n/* <span class=\"token string\">'blog'</span> Repository에 <span class=\"token string\">'blog'</span> 사이트를 리모트 */\r\n$ <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com:아이디/blog.git\r\n \r\n/* submodule <span class=\"token builtin class-name\">:</span> github.io Repository를 blog Repository의 submodule로<span class=\"token punctuation\">..</span>.\r\n hugo 명령어를 통해 public 폴더로 저장된 파일들을 .github.io.git Repository에 저장 */\r\n$ <span class=\"token function\">git</span> submodule <span class=\"token function\">add</span> -b masater git@github.com:아이디/아이디.github.io.git public</code></pre></div>\n<p>…서브모듈 설정할 때 필자의 경우 아래와 같은 에러로 고생했다. public폴더는 생성되었지만 체크아웃이 되지 않았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fatal: <span class=\"token string\">'origin/master'</span> is not a commit and a branch <span class=\"token string\">'master'</span> cannot be created from it\r\nUnable to checkout submodule <span class=\"token string\">'public'</span></code></pre></div>\n<p>이런 상황에 대한 해답을 stackoverflow 에서 찾았다. 오류 무시하고 아래와 같이 명령어들을 입력하여 해결했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/* 현재 디렉토리 -<span class=\"token operator\">>></span> C:/Hugo/bin/blog */\r\n$ hugo\r\n$ <span class=\"token builtin class-name\">cd</span> public\r\n \r\n/* 현재 디렉토리 -<span class=\"token operator\">>></span> C:/Hugo/bin/blog/public */\r\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\r\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"commit msg\"</span>\r\n$ <span class=\"token function\">git</span> push</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/* 현재 디렉토리 -<span class=\"token operator\">>></span> C:/Hugo/bin/blog/public */\r\n$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\r\n \r\n/* 현재 디렉토리 -<span class=\"token operator\">>></span> C:/Hugo/bin/blog */\r\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\r\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"commit msg\"</span>\r\n$ <span class=\"token function\">git</span> push origin master</code></pre></div>\n<p>다시 상위 폴더로 이동한 뒤 커밋 앤 푸시를 진행하였다. 성공적으로 깃허브 연동까지 마무리되었다.</p>\n<h3>컨텐츠 생성, 테마 submodule 업데이트 —–> 업로드 (빌드)</h3>\n<p>C:\\Hugo\\bin\\blog에 위치한 채로 아래와 같이 명령어를 입력하면\r\ncontent폴더가 생성되며 명령어로 입력하여 생성 될 폴더 및 파일은 content 폴더 하위로 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ hugo new 폴더이름/파일이름.md</code></pre></div>\n<p>테마 리포지토리를 서브모듈 듈로 받아온 경우 서브모듈로 연결된 테마 레포지토리를 수정했을 때(이때 테마 레포지토리는 푸시까지 완료하여야 함) 아래 명령어로 편리하게 업데이트가 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/* 현재 디렉토리 -<span class=\"token operator\">>></span> C:/Hugo/bin/blog */\r\n$ <span class=\"token function\">git</span> submodule update --remote</code></pre></div>\n<p>파일 확장자를 보면 알 수 있듯이, 블로그 컨텐츠는 마크다운 파일을 이용하여 작성할 수 있다. 필자는 구글링 키워드 마크다운 문법을 통해 사용방법을 터득했다.<br>\n컨텐츠 생성 및 테마 수정 후 저장하고 싶을 때 아래와 같이 커밋 앤 푸시를 하면 깃허브 페이지에 반영된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/* 현재 디렉토리 -<span class=\"token operator\">>></span> C:/Hugo/bin/blog/public */\r\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\r\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"commit msg\"</span>\r\n$ <span class=\"token function\">git</span> push origin master\r\n$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\r\n/* 현재 디렉토리 C:/Hugo/bin/blog */\r\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\r\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"commit msg\"</span>\r\n$ <span class=\"token function\">git</span> push origin master</code></pre></div>\n<h4>참고 사이트</h4>\n<ul>\n<li>Hugo 공식 : <a href=\"https://gohugo.io/getting-started/quick-start/\">https://gohugo.io/getting-started/quick-start/</a></li>\n<li>lubang님 블로그 : <a href=\"https://blog.lulab.net/infra/install-hugo-and-configure-for-your-blog/\">https://blog.lulab.net/infra/install-hugo-and-configure-for-your-blog/</a></li>\n<li>integerous님 블로그 : <a href=\"https://ryan-han.com/post/dev/creating_static_blog/\">https://ryan-han.com/post/dev/creating_static_blog/</a></li>\n<li>ialy님 블로그 : <a href=\"https://ialy1595.github.io/post/blog-construct-1/\">https://ialy1595.github.io/post/blog-construct-1/</a></li>\n<li>hoontaeklee님 블로그 : <a href=\"https://hoontaeklee.github.io/20191229_blogging_with_hugo/\">https://hoontaeklee.github.io/20191229_blogging_with_hugo/</a></li>\n<li>Stackoverflow : <a href=\"https://stackoverflow.com/questions/57867103/git-submodule-failure-when-building-pages-with-hugo\">https://stackoverflow.com/questions/57867103/git-submodule-failure-when-building-pages-with-hugo</a></li>\n</ul>","frontmatter":{"title":"github 블로그 만들기 (with hugo)","date":"February 19, 2022","description":"이전에 hugo를 이용해 블로그를 만들어보면서 기록해둔 아주 간단한 튜토리얼"}},"previous":{"fields":{"slug":"/data_structure/stack_and_queue/"},"frontmatter":{"title":"스택(stack) & 큐(queue)"}},"next":{"fields":{"slug":"/web/newline/"},"frontmatter":{"title":"오라클에서 불러온 텍스트 데이터 HTML(Thymeleaf)에서의 개행 처리"}}},"pageContext":{"id":"6fcda7be-0c4e-5d02-90b1-89f8329ffc79","previousPostId":"102c4889-b8ed-5414-8f5c-f0d4da54955b","nextPostId":"28762a17-81b7-5ae9-beaa-2069569d3a39"}},
    "staticQueryHashes": ["3257411868","642825376"]}