{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/sql/join/",
    "result": {"data":{"site":{"siteMetadata":{"title":"일기장"}},"markdownRemark":{"id":"bcac9e0a-2aba-512a-8e9f-9952c5a608d3","excerpt":"JOIN JOIN…","html":"<h2>JOIN</h2>\n<h3>JOIN이란?</h3>\n<p>두개 이상의 테이블을 결합하여 데이터를 검색하는 방법<br>\n즉 두개의 테이블을 하나의 테이블인 것 처럼 보여지게 한다.<br>\n보통 <code class=\"language-text\">Primary key</code>와 <code class=\"language-text\">Foreign key</code>를 활용하여 테이블을 연결한다.\r\n사용 조건은 두개의 테이블 중 적어도 하나의 공통된 컬럼이 존재하여야 하며 해당 컬럼의 값은 공유되어야 한다.</p>\n<h3>JOIN 종류</h3>\n<h4>INNER JOIN</h4>\n<p>교집합 개념의 JOIN, 기준 테이블과 JOIN 한 테이블의 중복값을 출력한다.<br>\n즉 두 테이블이 모두 가지고 있는 데이터만 검색이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> \r\n    테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n    테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n<span class=\"token keyword\">FROM</span> 기준테이블 별칭\r\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> 조인테이블 별칭 <span class=\"token keyword\">ON</span> 기준테이블별칭<span class=\"token punctuation\">.</span>기준키 <span class=\"token operator\">=</span> 조인테이블별칭 기준키</code></pre></div>\n<h4>LEFT OUTER JOIN</h4>\n<p>기준 테이블 값 + 테이블과 기준 테이블의 중복된 값이다.<br>\n(왼쪽 테이블)  + (오른쪽) <code class=\"language-text\">(왼쪽 테이블 기준으로 JOIN)</code></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> \r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n<span class=\"token keyword\">FROM</span> 기준테이블 별칭\r\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> 조인테이블 별칭 <span class=\"token keyword\">ON</span> 기준테이블별칭<span class=\"token punctuation\">.</span>기준키 <span class=\"token operator\">=</span> 조인테이블별칭 기준키</code></pre></div>\n<h4>RIGHT OUTER JOIN</h4>\n<p>LEFT OUTER JOIN의 반대개념이다.<br>\n<code class=\"language-text\">우측 테이블이 기준</code> 테이블이고 기준 테이블 기준으로 <code class=\"language-text\">우측 테이블과 좌측 테이블의 중복된 값</code>이 검색된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> \r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n<span class=\"token keyword\">FROM</span> 기준테이블 별칭\r\n<span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> 조인테이블 별칭 <span class=\"token keyword\">ON</span> 기준테이블별칭<span class=\"token punctuation\">.</span>기준키 <span class=\"token operator\">=</span> 조인테이블별칭 기준키</code></pre></div>\n<h4>FULL OUTER JOIN</h4>\n<p>합집합의 개념이다. 좌측 및 우측 테이블이 가지고 있는 데이터 모두 검색된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> \r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n<span class=\"token keyword\">FROM</span> 기준테이블 별칭\r\n<span class=\"token keyword\">FULL</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> 조인테이블 별칭 <span class=\"token keyword\">ON</span> 기준테이블별칭<span class=\"token punctuation\">.</span>기준키 <span class=\"token operator\">=</span> 조인테이블별칭 기준키</code></pre></div>\n<h4>CROSS JOIN</h4>\n<p>모든 경우의 수를 전부 표현해주는 방식이다.<br>\n한 쪽 테이블의 모든 행과 다른 테이블의 모든 행을 조인하여 검색된다. <code class=\"language-text\">(논리곱 개념)</code><br>\n예를 들어 테이블1 데이터 5개 테이블2 데이터 4개가 있다면 총 20개가 검색되어 나온다.<br>\n데이터 양에 따라 용량이 초과되거나 서버가 다운될 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> \r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n<span class=\"token keyword\">FROM</span> 기준테이블 별칭\r\n<span class=\"token keyword\">CROSS</span> <span class=\"token keyword\">JOIN</span> 조인테이블 별칭\r\n\r\n<span class=\"token keyword\">SELECT</span>\r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할칼럼<span class=\"token punctuation\">,</span>\r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할칼럼\r\n<span class=\"token keyword\">FROM</span> 기준테이블 별칭<span class=\"token punctuation\">,</span>조인테이블 별칭</code></pre></div>\n<h4>SELF JOIN</h4>\n<p>자기 자신과 자기 자신을 조인한다는 의미이다. 즉, <code class=\"language-text\">하나의 테이블을 여러번 복사해서 조인</code>한다고 생각하면 된다. 자신이 가지고 있는 컬럼을 다양하게 변형시켜 활용할 때 자주 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> \r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n   테이블별칭<span class=\"token punctuation\">.</span>조회할컬럼<span class=\"token punctuation\">,</span>\r\n<span class=\"token keyword\">FROM</span> 테이블 별칭<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 테이블 별칭<span class=\"token number\">2</span></code></pre></div>\n<h3>Subquery와 JOIN의 차이</h3>\n<p>서브쿼리의 경우 메인 쿼리에 종속되는 관계이며 조인은 두 테이블이 평등한 관계이다.<br>\n서브쿼리의 경우 직관적이나 일반적인 상황에선 위와 같은 이유로 조인보다 효율성이 떨어진다.</p>\n<h2>참고 사이트</h2>\n<p><a href=\"https://coding-factory.tistory.com/87\">https://coding-factory.tistory.com/87</a></p>","frontmatter":{"title":"SQL 개념 익히기 - JOIN","date":"February 03, 2022","description":"DB 지식이 부족한 본인을 위한 개념정리"}},"previous":null,"next":{"fields":{"slug":"/C_lang/pointer/"},"frontmatter":{"title":"C언어 포인터"}}},"pageContext":{"id":"bcac9e0a-2aba-512a-8e9f-9952c5a608d3","previousPostId":null,"nextPostId":"02ec6d7d-74b1-56e6-a0ea-134f0da96c07"}},
    "staticQueryHashes": ["3257411868","642825376"]}